apiVersion: v1
kind: Secret
metadata:
  name: {{ template "lldap.fullname" . }}
  labels:
    {{- include "lldap.labels" . | nindent 4 }}
  {{- if or .Values.secretAnnotations .Values.commonAnnotations }}
  annotations:
      {{- if .Values.secretAnnotations }}
      {{- include "tplvalues.render" ( dict "value" .Values.secretAnnotations "context" $ ) | nindent 4 }}
      {{- end }}
      {{- if .Values.commonAnnotations }}
      {{- include "tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
      {{- end }}
  {{- end }}
type: Opaque
data:
  smtp-password: {{ .Values.smtp.password | b64enc | quote }}
{{- if .Values.jwt.secret }}
  jwt-secret: {{ .Values.jwt.secret | b64enc | quote }}
{{- else }}
  jwt-secret: {{ randAlphaNum 32 | b64enc | quote }}
{{- end }}
{{- if .Values.ldap.userPass }}
  user-password: {{ .Values.ldap.userPass | b64enc | quote }}
{{- else }}
  user-password: {{ randAlphaNum 32 | b64enc | quote }}
{{- end }}
{{- if .Values.keyFile.value }}
  key-file: {{ .Values.keyFile.value | b64enc | quote }}
{{- else }}
  key-file: {{ randAscii 128 | b64enc | quote }}
{{- end }}
{{- if .Values.ldaps.enabled }}
{{- if .Values.ldaps.createTlsSecret }}
{{- $ca := genCA "ldaps-ca" (.Values.ldaps.createdTlsSecretLifetime | int) }}
{{- $fullname := include "lldap.fullname" . }}
{{- $releaseNamespace := .Release.Namespace }}
{{- $clusterDomain := .Values.clusterDomain }}
{{- $altNames := list (printf "*.%s.%s.svc.%s" $fullname $releaseNamespace $clusterDomain) (printf "%s.%s.svc.%s" $fullname $releaseNamespace $clusterDomain) $fullname }}
{{- $crt := genSignedCert $fullname nil $altNames (.Values.ldaps.createdTlsSecretLifetime | int) $ca }}
  ca.pem: {{ $ca.Cert | b64enc | quote }}
  key.pem: {{ $crt.Key | b64enc | quote }}
  cert.pem: {{ $crt.Cert | b64enc | quote }}
{{- else }}
{{- if .Values.ldaps.certificateKey }}
  key.pem: {{ .Values.ldaps.certificateKey | b64enc }}
{{- else }}
  {{- required "Certificate key is required when ldaps is enabled and auto-generation is off" .Values.ldaps.certificateKey }}
{{- end }}
{{- if .Values.ldaps.certificate }}
  cert.pem: {{ .Values.ldaps.certificate | b64enc }}
{{- else }}
  {{- required "Certificate is required when ldaps is enabled and auto-generation is off" .Values.ldaps.certificate }}
{{- end }}
{{- end }}
{{- end }}
